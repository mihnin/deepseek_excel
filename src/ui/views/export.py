# ui/export_view.py
import streamlit as st
from src.core.excel_handler import ExcelHandler  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å export_utils.py
from datetime import datetime

def render_export_ui(df, table_analysis=None):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç UI –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    st.subheader("–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π/–≤—Ä–µ–º–µ–Ω–µ–º
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    base_filename = f"results_{timestamp}"
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Excel
        excel_data = ExcelHandler.to_excel(df)  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å ExportManager
        ExcelHandler.create_download_button(
            excel_data, 
            f"{base_filename}.xlsx", 
            "üì• –°–∫–∞—á–∞—Ç—å –∫–∞–∫ Excel",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
        
        # JSON
        json_data = ExcelHandler.to_json(df)
        ExcelHandler.create_download_button(
            json_data, 
            f"{base_filename}.json", 
            "üì• –°–∫–∞—á–∞—Ç—å –∫–∞–∫ JSON",
            "application/json"
        )
    
    with col2:
        # CSV
        csv_data = ExcelHandler.to_csv(df)
        ExcelHandler.create_download_button(
            csv_data, 
            f"{base_filename}.csv", 
            "üì• –°–∫–∞—á–∞—Ç—å –∫–∞–∫ CSV",
            "text/csv"
        )
        
        # Word (–µ—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏–∑ –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã)
        if table_analysis:
            word_data = ExcelHandler.to_word(df, table_analysis)
            ExcelHandler.create_download_button(
                word_data, 
                f"{base_filename}.docx", 
                "üì• –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç Word",
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            )